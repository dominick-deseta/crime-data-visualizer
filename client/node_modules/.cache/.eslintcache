[{"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\index.js":"1","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\App.js":"2","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\reportWebVitals.js":"3","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Add.jsx":"4","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\SignIn.jsx":"5","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Users.jsx":"6","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\AdvQ1.jsx":"7","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Update.jsx":"8","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Crimes.jsx":"9","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\AdvQ2.jsx":"10","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Report.jsx":"11","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\components\\crimeTypeOptions.js":"12","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\components\\raceOptions.js":"13"},{"size":535,"mtime":1682535372000,"results":"14","hashOfConfig":"15"},{"size":1008,"mtime":1682535372000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1682535374000,"results":"17","hashOfConfig":"15"},{"size":975,"mtime":1682535374000,"results":"18","hashOfConfig":"15"},{"size":2045,"mtime":1682586842058,"results":"19","hashOfConfig":"15"},{"size":2798,"mtime":1682938516465,"results":"20","hashOfConfig":"15"},{"size":1996,"mtime":1682614450664,"results":"21","hashOfConfig":"15"},{"size":1197,"mtime":1682535374000,"results":"22","hashOfConfig":"15"},{"size":12565,"mtime":1683172082189,"results":"23","hashOfConfig":"15"},{"size":1328,"mtime":1682535374000,"results":"24","hashOfConfig":"15"},{"size":3980,"mtime":1683171580371,"results":"25","hashOfConfig":"15"},{"size":2421,"mtime":1682598123515,"results":"26","hashOfConfig":"15"},{"size":856,"mtime":1682599418766,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kilkjt",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\index.js",[],[],"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\App.js",["72"],[],"import { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Add from \"./pages/Add\";\nimport SignIn from \"./pages/SignIn\"\nimport Users from \"./pages/Users\";\nimport Update from \"./pages/Update\"\nimport Crimes from \"./pages/Crimes\"\nimport AdvQ1 from \"./pages/AdvQ1\";\nimport AdvQ2 from \"./pages/AdvQ2\";\nimport Report from \"./pages/Report\";\nimport \"./style.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<SignIn/>}/>\n          <Route path=\"/users\" element={<Users/>}/>\n          <Route path=\"/add\" element={<Add/>}/>\n          <Route path=\"/update/:userName\" element={<Update/>}/>\n          <Route path=\"/crimes\" element={<Crimes/>}/>\n          <Route path=\"/advQ1\" element={<AdvQ1/>}/>\n          <Route path=\"/advQ2\" element={<AdvQ2/>}/>\n          <Route path=\"/report\" element={<Report/>}/>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Add.jsx",[],[],"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\SignIn.jsx",["73"],[],"import React from 'react';\r\nimport {useState} from 'react';\r\nimport {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie'\r\n\r\nconst SignIn = () => {\r\n    useEffect(()=>{\r\n        Cookies.set('username', '', {expires: 7})\r\n        // document.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n        console.log(Cookies.get('username'))\r\n    }, []);\r\n  const [user,setUser] = useState({\r\n    userName:\"\",\r\n    password:\"\"\r\n  });\r\n  const navigate = useNavigate();\r\n  const handleChange = (e) => {\r\n    setUser((prev)=>({...prev,[e.target.name]: e.target.value}));\r\n  };\r\n  const handleClick = async e => {\r\n    e.preventDefault()\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3306/SignIn\", user)\r\n      const count = res.data[0].count\r\n      var errMess = document.getElementById(\"s\")\r\n      if (count == 1) {\r\n        errMess.innerText = \"SUCCESS!\"\r\n        errMess.style.color = \"green\"\r\n        Cookies.set('username', user.userName, {expires: 7})\r\n        console.log(Cookies.get('username'))\r\n        //document.cookie = \"username=\"+user.userName+\"; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n        //console.log(document.cookie)\r\n        navigate(\"/crimes\")\r\n      } else {\r\n        errMess.innerText = \"User not found. Please try again.\"\r\n        errMess.style.color = \"red\"\r\n      }\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n  };\r\n  console.log(user);\r\n  return (\r\n    <div className='form'>\r\n      <h1 id=\"s\">Sign In</h1>\r\n      <button className=\"signUp\"><Link to=\"/add\">Sign Up</Link></button>\r\n      {/* <h2 className=\"signInError\">ERROR!</h2> */}\r\n      <input type=\"text\" placeholder='user name' onChange={handleChange} name=\"userName\"/>\r\n      <input type=\"text\" placeholder='password' onChange={handleChange} name=\"password\"/>\r\n      <button className=\"confirmSignIn\" onClick={handleClick}>Confirm</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Users.jsx",[],[],"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\AdvQ1.jsx",["74"],[],"import React from 'react'\r\nimport {useEffect} from 'react'\r\nimport {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nconst AdvQ1 = () => {\r\nconst [crimes,setCrimes] = useState([])\r\nconst [coords,setCoords] = useState({\r\n    lat:0,\r\n    lng:0\r\n  });\r\n\r\nconst handleChange = (e) => {\r\n    setCoords((prev)=>({...prev,[e.target.name]: e.target.value}));\r\n}\r\n\r\nconst handleClick = async e => {\r\n    e.preventDefault()\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3306/callStoredProcedure\", coords)\r\n      setCrimes(res.data[0])\r\n      console.log(crimes)\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n  };\r\n\r\nconsole.log(coords)\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Stored Procedure Results</h1>\r\n        <div>\r\n            <button className=\"backToCrimes\"><Link to=\"/Crimes\">Back to crimes</Link></button>\r\n        </div>\r\n        <div>\r\n            <input type=\"number\" placeholder='latitude' onChange={handleChange} name=\"lat\"/>\r\n        </div>\r\n        <div>\r\n            <input type=\"number\" placeholder='longitude' onChange={handleChange} name=\"lng\"/>\r\n        </div>\r\n        <button className=\"confirm\" onClick={handleClick}>Confirm</button>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Crime ID</th>\r\n                    <th>Latitude</th>\r\n                    <th>Longitude</th>\r\n                    <th>Crime Type</th>\r\n                    <th>Result Type</th>\r\n                </tr>\r\n            </thead>\r\n            {crimes.map(crime => (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{crime.crimeID}</td>\r\n                        <td>{crime.latitude}</td>\r\n                        <td>{crime.longitude}</td>\r\n                        <td>{crime.crime_type}</td>\r\n                        <td>{crime.result_type}</td>\r\n                    </tr>\r\n                </tbody>\r\n            ))}\r\n        </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdvQ1","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Update.jsx",[],[],"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Crimes.jsx",["75","76"],[],"import React from 'react'\r\nimport {useEffect} from 'react'\r\nimport {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport Select from 'react-select'\r\nimport {useRef} from 'react'\r\nimport { GoogleMap, useLoadScript, MarkerF, InfoWindow, Circle} from '@react-google-maps/api'\r\nimport crimeTypeOptions from '../components/crimeTypeOptions.js'; \r\nimport raceOptions from '../components/raceOptions.js'; \r\n\r\nvar lat = 0\r\nvar lng = 0\r\n\r\nconst sexOptions = [\r\n  { value: 'M', label: 'Male' },\r\n  { value: 'F', label: 'Female' },\r\n  { value: 'X', label: 'Other' },\r\n];\r\n\r\nconst Crimes = () => {\r\nconst [crimes,setCrimes] = useState([])\r\n\r\nuseEffect(()=>{\r\n    const fetchAllCrimes = async()=>{\r\n        try{\r\n            const coords = {\r\n                lat : 40.1020,\r\n                lng : -88.2272\r\n            }\r\n            const res = await axios.post(\"http://localhost:3306/callStoredProcedure\", coords)\r\n            setCrimes(res.data[0]);\r\n            console.log(res.data[0])\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    fetchAllCrimes();\r\n    const interval = setInterval(() => {\r\n        const infoWindows = document.querySelectorAll('.gm-style-iw');\r\n        infoWindows.forEach((infoWindow) => {\r\n            const hasForm = infoWindow.querySelector('form');\r\n            if (!hasForm && infoWindow.innerText.trim() === '') {\r\n                const infoWindowContainer = infoWindow.parentElement.parentElement;\r\n                infoWindowContainer.style.display = 'none';\r\n            }\r\n        });\r\n        var loggedInAs = document.getElementById(\"loggedInAs\")\r\n        if (loggedInAs && loggedInAs.innerHTML) {\r\n          loggedInAs.innerHTML = \"Logged in as <span class=\\\"curUser\\\">\"+Cookies.get('username')+\"</span>\"\r\n        }\r\n        // console.log(Array.isArray(crimes))\r\n        // console.log('Number of InfoWindows in the DOM:', infoWindows.length);\r\n      }, 100);\r\n    \r\n      return () => clearInterval(interval);\r\n}, []);\r\n\r\nconst {isLoaded} = useLoadScript({googleMapsApiKey: \"AIzaSyC0lAXu1gaIJAw-Q5Gibi3JTaRzFs-wc7I\"});\r\nif(!isLoaded) {return <div>Loading....</div>}\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Reported Crimes</h1>\r\n        <span id=\"loggedInAs\">Logged in as ...</span>\r\n        <div>\r\n          <button className=\"toUsers\"><Link to=\"/Users\">View Users</Link></button>\r\n        </div>\r\n        <h5 id=\"long\">Longitude: ?</h5> \r\n        <h5 id=\"lat\">Latitude: ?</h5> \r\n        <div className=\"map_and_crimes\">\r\n            <div className=\"crime_table\">\r\n                <table className=\"crime_table_header\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Crime Type</th>\r\n                        <th>Victim</th>\r\n                        <th>Time</th>\r\n                        <th>User Report</th>\r\n                        <th>Distance</th>\r\n                        <th>Result Type</th>\r\n                    </tr>\r\n                </thead>\r\n                </table>\r\n                <div className=\"crime_table_body_wrapper\">\r\n                <table>\r\n                    <tbody>\r\n                    {crimes && crimes.map(crime => (\r\n                        <tr key={crime.crimeID}>\r\n                        <td>{crimeTypeOptions.find(option => option.value === String(crime.crime_type))?.label || \"\"}</td>\r\n                        <td>\r\n                          <div>\r\n                            <h5>{raceOptions.find(option => option.value === String(crime.victim_race))?.label || \"\"}</h5>\r\n                            <h5>{sexOptions.find(option => option.value === String(crime.victim_sex))?.label || \"\"}</h5>\r\n                            <h5>{crime.victim_age}</h5>\r\n                          </div>\r\n                        </td>\r\n                        <td>{formatTime(crime.time)}</td>\r\n                        <td>{crime.user_report === 1 ? \"Yes\" : \"No\"}</td>\r\n                        <td>{angularDistanceToMeters(crime.distance).toFixed(2)}m</td>\r\n                        <td>{crime.result_type}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"map_container\">\r\n                <Map crimes={crimes} setCrimes={setCrimes}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Crimes\r\n\r\n// !! Function is AI generated !!\r\nfunction angularDistanceToMeters(angularDistance) {\r\n  // Earth's mean radius in meters (using the authalic radius)\r\n  const earthMeanRadius = 6371007;\r\n\r\n  // Convert angular distance to radians\r\n  const angularDistanceRadians = (Math.PI / 180) * angularDistance;\r\n\r\n  // Calculate the linear distance in meters\r\n  const linearDistance = earthMeanRadius * angularDistanceRadians;\r\n\r\n  return linearDistance;\r\n}\r\n\r\n// !! Function is AI generated !!\r\nfunction formatTime(time) {\r\n  const hours = Math.floor(time / 100); // Extract hours from time\r\n  const minutes = time % 100; // Extract minutes from time\r\n\r\n  // Create a new Date object with the current date and the extracted hours and minutes\r\n  const timeObj = new Date();\r\n  timeObj.setHours(hours);\r\n  timeObj.setMinutes(minutes);\r\n\r\n  // Format the time as AM/PM\r\n  const formattedTime = timeObj.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n\r\n  return formattedTime;\r\n}\r\n\r\nfunction Map({crimes, setCrimes}) {\r\nconst [selectedCrime, setSelectedCrime] = useState(null);\r\nconst [postCrime, setPostCrime] = useState(null);\r\nconst mapRef = useRef(null);\r\nconst [mapCenter, setMapCenter] = useState({ lat: 40.1020, lng: -88.2272 });\r\nconst [isMounted, setIsMounted] = useState(false);\r\nconst [circleInstance, setCircleInstance] = useState(null);\r\n\r\nuseEffect(() => {\r\n  setIsMounted(true)\r\n});\r\n\r\nconst center = { lat: 40.1020, lng: -88.2272 }\r\nconst options = {\r\n  strokeColor: '#FF0000',\r\n  strokeOpacity: 0.8,\r\n  strokeWeight: 2,\r\n  fillColor: '#FF0000',\r\n  fillOpacity: 0.1,\r\n  clickable: false,\r\n  draggable: false,\r\n  editable: false,\r\n  visible: true,\r\n  radius: angularDistanceToMeters(1),\r\n  zIndex: 100\r\n}\r\n\r\nif (!Array.isArray(crimes)) {\r\n    console.log(\"crimes is not an array\")\r\n    console.log(crimes.crimes)\r\n    return <div>Loading...</div>;\r\n}\r\n\r\nconst handleSubmit =  async e=> {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3306/AddCrime\", postCrime)\r\n      console.log(res)\r\n      window.location.reload()\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n}\r\nconst handleChange = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n    if (name === \"time\") {\r\n        value = value.replace(\":\", \"\");\r\n    }\r\n    console.log(\"handling change! \" + value)\r\n    setPostCrime((prev) => {\r\n        return { ...prev, [name]: value };\r\n    });\r\n};\r\nconst handleSelect = (e, actionMeta) => {\r\n    const name = actionMeta.name;\r\n    let value = e.value;\r\n    console.log(\"handling select! \" + value)\r\n    setPostCrime((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n};\r\nconst handleDelete = async (crimeID)=>{\r\n    try{\r\n        await axios.delete(\"http://localhost:3306/deleteCrime/\"+crimeID)\r\n        window.location.reload()\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\nconst getCrimeLabel = (crimeType) => {\r\n    const crimeOption = crimeTypeOptions.find(option => option.value === String(crimeType));\r\n    return crimeOption?.label || \"\";\r\n};\r\nconst handleDragEnd = () => {\r\n  console.log(\"handling dragEnd\")\r\n  if (mapRef.current && mapRef.current.state && mapRef.current.state.map){\r\n    console.log(mapRef.current.state.map.getCenter().toJSON());\r\n    const newCenter = mapRef.current.state.map.getCenter().toJSON();\r\n    setMapCenter(newCenter);\r\n  axios\r\n    .post(\"http://localhost:3306/callStoredProcedure\", newCenter)\r\n    .then((res) => {\r\n      console.log(crimes.length)\r\n      if (res.data[0]) {\r\n        console.log(\"changing crimes...\")\r\n        setCrimes(res.data[0]);\r\n        console.log(crimes);\r\n      } else {\r\n        console.log(res)\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n\r\n return <GoogleMap ref={mapRef} zoom={15} center={mapCenter} mapContainerClassName='map' onClick={ev => {\r\n    lat = ev.latLng.lat()\r\n    lng = ev.latLng.lng()\r\n    document.getElementById('lat').innerHTML = \"Latitude: <span class=\\\"blue\\\">\" + lat + \"</span>\";\r\n    document.getElementById('long').innerHTML = \"Longitude: <span class=\\\"blue\\\">\" + lng + \"</span>\";\r\n    console.log(Cookies.get('username'))\r\n  \r\n    setPostCrime({\r\n        crimeType: \"\",\r\n        crimeLat: lat,\r\n        crimeLng: lng,\r\n        crimeDescription: \"\",\r\n        victimSex: \"\",\r\n        victimRace: \"\",\r\n        victimAge: \"\",\r\n        time: \"\",\r\n        username: Cookies.get('username')\r\n    })\r\n    }} onDragEnd={handleDragEnd} onZoomChanged={handleDragEnd}>\r\n    {isMounted && (\r\n      <Circle\r\n        className=\"circle\"\r\n        center={mapCenter}\r\n        options={options}\r\n        onLoad={(circle) => {\r\n          if (circleInstance) {\r\n            circleInstance.setMap(null);\r\n          }\r\n          setCircleInstance(circle);\r\n        }}\r\n        onUnmount={() => {\r\n          if (circleInstance) {\r\n            circleInstance.setMap(null);\r\n          }\r\n          setCircleInstance(null);\r\n        }}\r\n      />\r\n    )}\r\n    <MarkerF\r\n      position={mapCenter}\r\n      options={{\r\n        icon: {\r\n          url: 'https://cdn-icons-png.flaticon.com/512/10/10522.png', // Or an online URL\r\n          scaledSize: new window.google.maps.Size(50, 50),\r\n        },\r\n      }}\r\n    />\r\n    {crimes && crimes.map((crime, index) => (\r\n        <MarkerF\r\n          key={index}\r\n          position={{ lat: crime.latitude, lng: crime.longitude }}\r\n          onClick={() => {\r\n            setSelectedCrime(crime);\r\n          }}\r\n          options={{\r\n            icon: {\r\n              url: 'https://maps.google.com/mapfiles/ms/icons/red-dot.png', \r\n              scaledSize: new window.google.maps.Size(50, 50), \r\n              labelOrigin: new window.google.maps.Point(25, 16)\r\n            },\r\n            label: {\r\n                text: getCrimeLabel(crime.crime_type),\r\n                color: 'white',\r\n                fontSize: '12px',\r\n                fontWeight: 'bold',\r\n                className: 'map-label'\r\n            }\r\n          }}\r\n        />\r\n      ))}\r\n    {postCrime && (\r\n        <InfoWindow\r\n          position={{ lat: postCrime.crimeLat, lng: postCrime.crimeLng }}\r\n          onCloseClick={() => {\r\n            setPostCrime(null);\r\n          }}\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <h5>Crime Type: </h5> \r\n                <Select\r\n                    options={crimeTypeOptions}\r\n                    name=\"crimeType\"\r\n                    onChange={handleSelect}\r\n                />\r\n                <h5>Crime Description: </h5> <textarea name=\"crimeDescription\" onChange={handleChange}></textarea>\r\n                <h5>Victim Sex: </h5>\r\n                <Select\r\n                    options={sexOptions}\r\n                    name=\"victimSex\"\r\n                    onChange={handleSelect}\r\n                />\r\n                <h5>Time: </h5> <input type=\"time\" name=\"time\" onChange={handleChange}/>\r\n                <h5>Victim Race: </h5>\r\n                <Select\r\n                    options={raceOptions}\r\n                    name=\"victimRace\"\r\n                    onChange={handleSelect}\r\n                />\r\n                <h5>Victim Age: </h5>\r\n                <input type=\"number\"  name=\"victimAge\"onChange={handleChange}/>\r\n                <div><button type=\"submit\">Submit</button></div>\r\n            </form>\r\n        </InfoWindow>\r\n      )}\r\n    {selectedCrime && (\r\n        <InfoWindow\r\n          position={{ lat: selectedCrime.latitude, lng: selectedCrime.longitude }}\r\n          onCloseClick={() => {\r\n            setSelectedCrime(null);\r\n          }}\r\n        >\r\n          <div>\r\n            <h4>{selectedCrime.crime_type}</h4>\r\n            <p>\r\n              Crime ID: {selectedCrime.crimeID} <br />\r\n              Location ID: {selectedCrime.locationID} <br />\r\n              Time: {selectedCrime.time} <br />\r\n              User Reported: {selectedCrime.user_report} <br />\r\n              Victim ID: {selectedCrime.victimID} <br />\r\n              Description: {selectedCrime.description}\r\n            </p>\r\n            <button className=\"delete\" onClick={()=>handleDelete(selectedCrime.crimeID)}>Delete</button>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n </GoogleMap>\r\n }\r\n ","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\AdvQ2.jsx",[],[],"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\pages\\Report.jsx",["77","78"],[],"import React from 'react'\r\nimport {useEffect} from 'react'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { GoogleMap, useLoadScript, Markers} from '@react-google-maps/api'\r\nimport Cookies from 'js-cookie'\r\nimport Select from 'react-select'\r\nimport crimeTypeOptions from '../components/crimeTypeOptions.js'; \r\nimport raceOptions from '../components/raceOptions.js'; \r\n\r\nvar lat = 0\r\nvar lng = 0\r\n\r\nconst Report = () => {\r\n\r\n  useEffect(() => {\r\n  const interval = setInterval(() => {\r\n    // console.log(details)\r\n    var loggedInAs = document.getElementById(\"loggedInAs\")\r\n    loggedInAs.innerHTML = \"Logged in as <span class=\\\"curUser\\\">\"+Cookies.get('username')+\"</span>\"\r\n  }, 1000);\r\n\r\n  return () => clearInterval(interval);\r\n  }, [])\r\n\r\n  const sexOptions = [\r\n    { value: 'M', label: 'Male' },\r\n    { value: 'F', label: 'Female' },\r\n    { value: 'X', label: 'Other' },\r\n  ];\r\n\r\n  const [details, setDetails] = useState({\r\n    crimeType: \"\",\r\n    crimeDescription: \"\",\r\n    victimSex: \"\",\r\n    victimRace: \"\",\r\n    victimAge: \"\",\r\n    time: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n    if (name === \"time\") {\r\n      value = value.replace(\":\", \"\");\r\n    }\r\n    console.log(\"handling change! \" + value)\r\n    setDetails((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleSelect = (e, actionMeta) => {\r\n    const name = actionMeta.name;\r\n    let value = e.value;\r\n    console.log(\"handling change! \" + value)\r\n    setDetails((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit =  async e=> {\r\n    e.preventDefault()\r\n    try {\r\n      console.log(details)\r\n      const newDetails = {\r\n        crimeType: details.crimeType,\r\n        crimeLat: lat,\r\n        crimeLng: lng,\r\n        crimeDescription: details.crimeDescription,\r\n        victimSex: details.victimSex,\r\n        victimRace: details.victimRace,\r\n        victimAge: details.victimAge,\r\n        time: details.time,\r\n        username: Cookies.get('username')\r\n      }\r\n      const res = await axios.post(\"http://localhost:3306/AddCrime\", newDetails)\r\n      console.log(res)\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n    \r\n  }\r\n  \r\n  const {isLoaded} = useLoadScript({googleMapsApiKey: \"AIzaSyC0lAXu1gaIJAw-Q5Gibi3JTaRzFs-wc7I\"});\r\n  if(!isLoaded) {return <div>Loading....</div>}\r\n\r\n\r\n  return (\r\n  <div>\r\n    <h1>Report a crime!</h1>\r\n    <span id=\"loggedInAs\">Logged in as ...</span>\r\n    <form onSubmit={handleSubmit}>\r\n      <h5>Crime Type: </h5> \r\n      <Select\r\n        options={crimeTypeOptions}\r\n        name=\"crimeType\"\r\n        onChange={handleSelect}\r\n      />\r\n      <h5 id=\"lat\">Latitude: ?</h5> \r\n      <h5 id=\"long\">Longitude: ?</h5> \r\n      <h5>Crime Description: </h5> <textarea name=\"crimeDescription\" onChange={handleChange}></textarea>\r\n      <h5>Victim Sex: </h5>\r\n      <Select\r\n        options={sexOptions}\r\n        name=\"victimSex\"\r\n        onChange={handleSelect}\r\n      />\r\n      <h5>Time: </h5> <input type=\"time\" name=\"time\" onChange={handleChange}/>\r\n      <h5>Victim Race: </h5>\r\n      <Select\r\n        options={raceOptions}\r\n        name=\"victimRace\"\r\n        onChange={handleSelect}\r\n      />\r\n      <h5>Victim Age: </h5> <input type=\"number\"  name=\"victimAge\"onChange={handleChange}/>\r\n      <button type=\"submit\">Submit Form</button>\r\n    </form>\r\n    <div className=\"map_container\">\r\n      <Map/>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Report\r\n\r\nfunction Map() {\r\n return <GoogleMap onClick={ev => {\r\n    lat = ev.latLng.lat()\r\n    lng = ev.latLng.lng()\r\n    document.getElementById('lat').innerHTML = \"Latitude: <span class=\\\"blue\\\">\" + lat + \"</span>\";\r\n    document.getElementById('long').innerHTML = \"Longitude: <span class=\\\"blue\\\">\" + lng + \"</span>\";\r\n }} zoom={15} center={{lat: 40.1020, lng:-88.2272}} mapContainerClassName='map'></GoogleMap>\r\n}","C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\components\\crimeTypeOptions.js",[],[],"C:\\Users\\iamth\\Documents\\College Stuff\\CS 411\\new411\\crime-data-visualizer\\client\\src\\components\\raceOptions.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":29,"column":17,"nodeType":"85","messageId":"86","endLine":29,"endColumn":19},{"ruleId":"79","severity":1,"message":"87","line":2,"column":9,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":157,"column":1,"nodeType":"81","endLine":157,"endColumn":10,"suggestions":"90"},{"ruleId":"79","severity":1,"message":"91","line":161,"column":7,"nodeType":"81","messageId":"82","endLine":161,"endColumn":13},{"ruleId":"79","severity":1,"message":"92","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":21},{"ruleId":"79","severity":1,"message":"93","line":6,"column":36,"nodeType":"81","messageId":"82","endLine":6,"endColumn":43},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsMounted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["94"],"'center' is assigned a value but never used.","'useNavigate' is defined but never used.","'Markers' is defined but never used.",{"desc":"95","fix":"96"},"Add dependencies array: []",{"range":"97","text":"98"},[5850,5850],", []"]